<!DOCTYPE html>
<html>
<head>
  <title> Encorenation </title>
  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <%= csrf_meta_tags %>

  <link rel='stylesheet' type='text/css' href='fullcalendar.css' />
<script type='text/javascript' src='/jquery.js'></script>
<script type='text/javascript' src='/bower_components/fullcalendar/fullcalendar.js'></script>
<script type='text/javascript' src='fullcalendar/gcal.js'></script>

</head>
<body>

<!-- <div id="fb-root"></div>
<script>
  window.fbAsyncInit = function() {
  FB.init({
    appId      : '568908626529923',
    status     : true, // check login status
    cookie     : true, // enable cookies to allow the server to access the session
    xfbml      : true  // parse XFBML
  });

  // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
  // for any authentication related change, such as login, logout or session refresh. This means that
  // whenever someone who was previously logged out tries to log in again, the correct case below 
  // will be handled. 
  FB.Event.subscribe('auth.authResponseChange', function(response) {
    // Here we specify what we do with the response anytime this event occurs. 
    if (response.status === 'connected') {
      // The response object is returned with a status field that lets the app know the current
      // login status of the person. In this case, we're handling the situation where they 
      // have logged in to the app.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // In this case, the person is logged into Facebook, but not into the app, so we call
      // FB.login() to prompt them to do so. 
      // In real-life usage, you wouldn't want to immediately prompt someone to login 
      // like this, for two reasons:
      // (1) JavaScript created popup windows are blocked by most browsers unless they 
      // result from direct interaction from people using the app (such as a mouse click)
      // (2) it is a bad experience to be continually prompted to login upon page load.
      login()
    } else {
      // In this case, the person is not logged into Facebook, so we call the login() 
      // function to prompt them to do so. Note that at this stage there is no indication
      // of whether they are logged into the app. If they aren't then they'll see the Login
      // dialog right after they log in to Facebook. 
      // The same caveats as above apply to the FB.login() call here.
      login()
    }
  });
  };

  function login() {
      alert(23)
      FB.login(function(response) {
          if (response.authResponse) {
              // connected
              window.location="/events";
          } else {
              // cancelled
              alert('User cancelled login or did not fully authorize.');
          }
      });
  }

  // Load the SDK asynchronously
  (function(d){
   var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement('script'); js.id = id; js.async = true;
   js.src = "//connect.facebook.net/en_US/all.js";
   ref.parentNode.insertBefore(js, ref);
  }(document));

  // Here we run a very simple test of the Graph API after login is successful. 
  // This testAPI() function is only called in those cases. 
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Good to see you, ' + response.name + '.');
    });
  }
</script>


  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
  present a graphical Login button that triggers the FB.login() function when clicked.

<fb:login-button show-faces="true" width="200" max-rows="1"></fb:login-button> -->

 

  <div class="container">
    <div class="row">
      <div class="span12">
        <div class='pull-left'>
          <h1> Encorenation <small> Event Management made Easy! </small> </h1>
        </div>

        <div class='pull-right top20'>
          <%= link_to "Home", home_index_path, class:"btn btn-primary", title:"Home" %> &nbsp;
          <%= link_to "Events", events_path, class:"btn btn-primary", title:"Events" %> &nbsp;
          <%= link_to "Candidates", candidates_path, class:"btn btn-primary", title:"Candidates" %> &nbsp;
          <% if user_signed_in? %>
          <%= link_to "Logout", destroy_user_session_path, method: :delete, class:"btn btn-large btn-danger", confirm: "Are you sure?" %>
          <% else %>
          <%= link_to "Sign Up", new_user_registration_path, class:"btn btn-primary", title:"Home" %> &nbsp;
          <%= link_to "Sign in with Facebook", user_omniauth_authorize_path(:facebook), class:"btn btn-primary" %>
          <% end %>
        </div>

        <div class="clearfix"></div>

        <hr />
      </div>
    </div>

    <% if notice %>
      <div class="alert alert-success">
        <%= notice %>
      </div>
    <% end %>

    <% if alert %>
      <div class="alert alert-error">
        <%= alert %>
      </div>
    <% end %>

    <div class="row">
      <div class="span12">
        <%= yield %>
      </div>
    </div>
  </div>

</body>
</html>
